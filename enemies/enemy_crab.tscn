[gd_scene load_steps=15 format=3 uid="uid://bpp8boijvt5jq"]

[ext_resource type="Texture2D" path="res://enemies/crab-idle.png" id="1_j4a0p"]
[ext_resource type="Texture2D" path="res://enemies/crab-walk.png" id="2_8x803"]

[sub_resource type="GDScript" id="GDScript_ujlsf"]
script/source = "extends CharacterBody2D
@onready var crab_sprite = $AnimatedSprite2D
@onready var idle_timer = $IdleTimer

var death_effect = preload(\"res://enemies/enemy_death_effect.tscn\")

var gravity = ProjectSettings.get_setting(\"physics/2d/default_gravity\")
var current_state : State
var direction : Vector2 = Vector2.LEFT
var number_of_points : int
var point_positions : Array[Vector2]
var current_point : Vector2
var current_point_position : int
var can_walk : bool = true
var max_health : int = 15
var health : int = max_health

@export var speed : int = 1500
@export var patrol_points : Node

enum State { Idle, Walk }

func _ready():
	if patrol_points != null:
		number_of_points = patrol_points.get_children().size()
		for point in patrol_points.get_children():
			point_positions.append(point.global_position)
		current_point = point_positions[current_point_position]
	else:
		print(\"No patrol points\")
		
	current_state = State.Walk

func _physics_process(delta : float):
	enemy_gravity(delta)
	enemy_idle(delta)
	enemy_walk(delta)
	
	move_and_slide()
	
	crab_animation()

func enemy_gravity(delta : float):
	if not is_on_floor():
		velocity.y += gravity*delta

func enemy_idle(delta : float):
	if !can_walk:
		velocity.x = move_toward(velocity.x, 0, speed*delta)
		current_state = State.Idle
		current_state = State.Idle

func enemy_walk(delta : float):
	if !can_walk:
		return
	
	if abs(position.x - current_point.x) > 0.5:
		velocity.x = direction.x * speed * delta
		current_state = State.Walk
	else:
		current_point_position += 1
		
		if current_point_position >= number_of_points:
			current_point_position = 0
		
		current_point = point_positions[current_point_position]
	
		if current_point.x > position.x:
			direction = Vector2.RIGHT
		else:
			direction = Vector2.LEFT
		
		can_walk = false
		idle_timer.start()

func _on_idle_timer_timeout():
	can_walk = true
	crab_sprite.flip_h = direction.x > 0
	current_state = State.Walk
	
func crab_animation():
	if current_state == State.Idle && !can_walk:
		crab_sprite.play(\"idle\")
	elif current_state == State.Walk && can_walk:
		crab_sprite.play(\"walk\")


func _on_hurtbox_area_entered(area : Area2D):
	if area.get_parent().has_method(\"get_damage_amount\"):
		var node = area.get_parent() as Node
		health -= node.damage_amount
		if health <= 0:
			var death_effect_instance = death_effect.instantiate() as Node2D
			death_effect_instance.global_position = global_position
			get_parent().add_child(death_effect_instance)
			queue_free()
"

[sub_resource type="AtlasTexture" id="AtlasTexture_4chss"]
atlas = ExtResource("1_j4a0p")
region = Rect2(0, 0, 48, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_312xp"]
atlas = ExtResource("1_j4a0p")
region = Rect2(48, 0, 48, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_1d35b"]
atlas = ExtResource("1_j4a0p")
region = Rect2(96, 0, 48, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_vy8y0"]
atlas = ExtResource("1_j4a0p")
region = Rect2(144, 0, 48, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_fthgm"]
atlas = ExtResource("2_8x803")
region = Rect2(0, 0, 48, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_piu7l"]
atlas = ExtResource("2_8x803")
region = Rect2(48, 0, 48, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_fbryo"]
atlas = ExtResource("2_8x803")
region = Rect2(96, 0, 48, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_0lah8"]
atlas = ExtResource("2_8x803")
region = Rect2(144, 0, 48, 32)

[sub_resource type="SpriteFrames" id="SpriteFrames_cdbeo"]
animations = [{
"frames": [],
"loop": true,
"name": &"default",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_4chss")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_312xp")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1d35b")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_vy8y0")
}],
"loop": true,
"name": &"idle",
"speed": 4.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_fthgm")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_piu7l")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_fbryo")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_0lah8")
}],
"loop": true,
"name": &"walk",
"speed": 6.0
}]

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_cr1oe"]
radius = 11.0
height = 26.0

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_rgiux"]
radius = 11.0
height = 26.0

[node name="EnemyCrab" type="CharacterBody2D"]
script = SubResource("GDScript_ujlsf")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
position = Vector2(0, -14)
sprite_frames = SubResource("SpriteFrames_cdbeo")
animation = &"walk"
autoplay = "idle"
frame_progress = 0.607781

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(-1, -13)
shape = SubResource("CapsuleShape2D_cr1oe")

[node name="IdleTimer" type="Timer" parent="."]
wait_time = 2.0
autostart = true

[node name="Hurtbox" type="Area2D" parent="."]
collision_layer = 4
collision_mask = 2

[node name="CollisionShape2D" type="CollisionShape2D" parent="Hurtbox"]
position = Vector2(-1, -13)
shape = SubResource("CapsuleShape2D_rgiux")
debug_color = Color(0.985627, 0, 0.331871, 0.42)

[connection signal="timeout" from="IdleTimer" to="." method="_on_idle_timer_timeout"]
[connection signal="area_entered" from="Hurtbox" to="." method="_on_hurtbox_area_entered"]
